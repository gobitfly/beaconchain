@mixin truncate-text() {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.truncate-text {
  @include truncate-text;
}

.text-align-left {
  text-align: left;
}

.pointer {
  cursor: pointer;
}

.dots-before {
  &:before {
    content: "\2026";
  }
}

.dots-after {
  &:after {
    content: "\2026";
  }
}

.no-wrap {
  white-space: nowrap;
}

.text-disabled{
  color: var(--text-color-disabled);
}

.positive {
  color: var(--positive-color);
}

.negative {
  color: var(--negative-color);
}

.partial {
  color: var(--partial-color);
}

.orphaned {
  color: var(--orphaned-color);
}

@mixin positive-background() {  
  background-color: var(--positive-color);
  color: var(--positive-contrast-color);
}

@mixin negative-background(){
  background-color: var(--negative-color);
  color: var(--negative-contrast-color);
}

@mixin partial-background() {
  background-color: var(--partial-color);
  color: var(--partial-contrast-color);
}

@mixin orphaned-background() {
  background-color: var(--orphaned-color);
  color: var(--orphaned-contrast-color);
}

@mixin dark-tag-background() {
  background-color: var(--dark-tag-color);
  color: var(--dark-tag-contrast-color);
}

@mixin light-tag-background() {
  background-color: var(--light-tag-color);
  color: var(--light-tag-contrast-color);
}

.comma {
  &:before {
    content: ",";
  }
}

.slash-after {
  &:after {
    content: " / ";
  }
}

.round-brackets {
  &:before {
    content: "(";
  }
  &:after {
    content: ")";
  }
}

@mixin set-all-width($width) {
  width: $width;
  max-width: $width;
  min-width: $width;
}

@keyframes blinking {
  0% {
    opacity: 0.2;
  }

  100% {
    opacity: 1;
  }
}

.blinking-animation {
  animation: blinking 1s alternate infinite;
}

@keyframes delayed-fadein {
  0% { opacity: 0; }
  50% { opacity: 0; }
  100% { opacity: 1; }
}

.delayed-fadein-animation {
  animation: delayed-fadein 2s;
}