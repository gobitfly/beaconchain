@import "~/assets/css/colors.scss";
@import "~/assets/css/variables.scss";
@import "~/assets/css/fonts.scss";
@import "~/assets/css/utils.scss";

html {
  margin: 0;
  padding: 0;
}
body {
  @include standard_text;
  margin: 0;
  padding: 0;
  background-color: var(--background-color);
  color: var(--text-color);
}

a {
  color: inherit;
  text-decoration: none;
  &:hover:not([disabled])  {
    opacity: 0.8;
  }

  &[disabled]{
    cursor: unset;    
    pointer-events: none;
  }
}

.link {
  color: var(--link-color);
  cursor: pointer;
  &:hover:not([disabled]) {
    opacity: 0.8;
  }
  &[disabled]{
    color: var(--disabled-color);
  }
}

@mixin container() {
  color: var(--container-color);
  background-color: var(--container-background);
  border: var(--container-border);
  border-radius: var(--border-radius);
}

.container {
  @include container;
}

/***
  * Scrollbar styling
***/
* {
  /* Firefox has only limited customisation, which should also work on Safari. */
  /* this style only sets the default color for the track and thumb, unfortunately we can't change the drag color */
  scrollbar-color: var(--scrollbar-thumb-color) transparent;
  scrollbar-width: thin;

  /* Chrome: we must remove the styles above otherwise the styles below will not work correctly */
  @supports (-webkit-appearance:none){
    scrollbar-color: unset;
    scrollbar-width: unset;
  }
  /* Chrome: width */
  ::-webkit-scrollbar {
    width: 5px;
    height: 5px;
  }
  /* Chrome: track */
  ::-webkit-scrollbar-track {
    background: transparent;
  }
  /* Chrome: handle */
  ::-webkit-scrollbar-thumb {
    background: var(--scrollbar-thumb-color);
  }
  /* Chrome: handle on hover */
  ::-webkit-scrollbar-thumb:hover {
    background: var(--scrollbar-thumb-hover-color);
  }
}

/** To make a SVG monochromatic, assign it to the class `monochromatic`.
 *  It will work if you replace every `fill="#..."` in the SVG with `class="colorX shape"` or `class="colorX background"` (with X depending on the color and as high as the number of colors)
 *  and, in the <style> section of the SVG, you define every `.colorX {fill: #...}` accordingly. */
svg{
  &.monochromatic {
    .shape {
      fill: currentColor;
    }
    .background {
      fill: none;
    }
  }
}
