// Code generated by tygo. DO NOT EDIT.
/* eslint-disable */

//////////
// source: common.go

export interface Paging {
  prev_cursor?: string;
  next_cursor?: string;
  total_count?: number /* uint64 */;
}
export interface ApiResponse {
  paging?: Paging;
  data: any;
}
export interface ApiErrorResponse {
  error: string;
}
export interface ApiDataResponse<T extends any> {
  data: T;
}
export interface ApiPagingResponse<T extends any> {
  paging: Paging;
  data: T[];
}
export type PubKey = string;
export type Hash = string; // blocks, txs etc.
export interface Address {
  hash: Hash;
  ens?: string;
}
export interface LuckItem {
  percent: number /* float64 */;
  expected: string /* time.Time */;
  average: any /* time.Duration */;
}
export interface Luck {
  proposal: LuckItem;
  sync: LuckItem;
}
export interface StatusCount {
  success: number /* uint64 */;
  failed: number /* uint64 */;
}
export interface ClElValue<T extends any> {
  el: T;
  cl: T;
}
export interface PeriodicValues<T extends any> {
  all_time: T;
  last_24h: T;
  last_7d: T;
  last_30d: T;
}
export interface ChartSeries<T extends number /* int */ | string> {
  id: T; // id may be a string or an int
  stack?: string; // for stacking bar charts
  data: number /* float64 */[]; // y-axis values
}
export interface ChartData<T extends number /* int */ | string> {
  categories: number /* uint64 */[]; // x-axis
  series: ChartSeries<T>[];
}
export interface SearchResult {
  type: string;
  chain_id: number /* uint64 */;
  hash_value?: string;
  num_value?: number /* uint64 */;
  str_value?: string;
}
export interface SearchResponse {
  data: SearchResult[];
}
