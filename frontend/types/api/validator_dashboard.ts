// Code generated by tygo. DO NOT EDIT.
import { ApiDataResponse, PeriodicClElValues, Luck, ApiPagingResponse, ClElValue, StatusCount, HighchartsSeries, PubKey, Address, Hash } from './common.ts';


//////////
// source: validator_dashboard.go

/**
 * ------------------------------------------------------------
 * Overview
 */
export type VDBOverviewResponse = ApiDataResponse<VDBOverviewData>;
export interface VDBOverviewData {
    groups: VDBOverviewGroup[];
    validators: VDBOverviewValidators;
    efficiency: VDBOverviewEfficiency;
    rewards: PeriodicClElValues<string /* decimal.Decimal */>;
    luck: Luck;
    apr: PeriodicClElValues<number /* float64 */>;
}
export interface VDBOverviewValidators {
    total: number /* uint64 */;
    active: number /* uint64 */;
    pending: number /* uint64 */;
    exited: number /* uint64 */;
    slashed: number /* uint64 */;
}
export interface VDBOverviewEfficiency {
    total: number /* float64 */;
    attestation: number /* float64 */;
    proposal: number /* float64 */;
    sync: number /* float64 */;
}
export interface VDBOverviewGroup {
    id: number /* uint64 */;
    name: string;
}
/**
 * ------------------------------------------------------------
 * Slot Viz
 */
export type VDBSlotVizResponse = ApiDataResponse<VDBSlotVizEpoch>;
export interface VDBSlotVizEpoch {
    epoch: number /* uint64 */;
    state: 'head' | 'finalized' | 'scheduled';
    slots: VDBSlotVizSlot[];
}
export interface VDBSlotVizSlot {
    slot: number /* uint64 */;
    status: 'proposed' | 'missed' | 'scheduled' | 'orphaned';
    duties: VDBSlotVizDuty[];
}
export interface VDBSlotVizDuty {
    type: 'proposal' | 'attestation' | 'sync' | 'slashing';
    pending_count: number /* uint64 */;
    success_count: number /* uint64 */;
    success_earnings: string /* decimal.Decimal */;
    failed_count: number /* uint64 */;
    failed_earnings: string /* decimal.Decimal */;
    block?: number /* uint64 */;
    validator?: number /* uint64 */;
}
/**
 * ------------------------------------------------------------
 * Summary Tab
 */
export type VDBSummaryTableResponse = ApiPagingResponse<VDBSummaryTableRow>;
export interface VDBSummaryTableRow {
    group_id: number /* uint64 */;
    efficiency_day: number /* float64 */;
    efficiency_week: number /* float64 */;
    efficiency_month: number /* float64 */;
    efficiency_total: number /* float64 */;
    validators: number /* uint64 */[];
}
export type VDBGroupSummaryResponse = ApiDataResponse<VDBGroupSummaryData>;
export interface VDBGroupSummaryData {
    details_day: VDBGroupSummaryColumn;
    details_week: VDBGroupSummaryColumn;
    details_month: VDBGroupSummaryColumn;
    details_total: VDBGroupSummaryColumn;
}
export interface VDBGroupSummaryColumn {
    attestation_head: VDBGroupSummaryColumnItem;
    attestation_source: VDBGroupSummaryColumnItem;
    attestation_target: VDBGroupSummaryColumnItem;
    attestation_efficiency: number /* float64 */;
    attestation_avg_incl_dist: number /* float64 */;
    sync: VDBGroupSummaryColumnItem;
    proposals: VDBGroupSummaryColumnItem;
    slashed: VDBGroupSummaryColumnItem; // Failed slashings are count of validators in the group that were slashed
    apr: ClElValue<number /* float64 */>;
    income: ClElValue<string /* decimal.Decimal */>;
    luck: Luck;
}
export interface VDBGroupSummaryColumnItem {
    status_count: StatusCount;
    earned: string /* decimal.Decimal */;
    penalty: string /* decimal.Decimal */;
    validators?: number /* uint64 */[];
}
export type VDBSummaryChartResponse = ApiDataResponse<HighchartsSeries[]>;
/**
 * ------------------------------------------------------------
 * Rewards Tab
 */
export type VDBRewardsTableResponse = ApiPagingResponse<VDBRewardsTableRow>;
export interface VDBRewardsTableRow {
    epoch: number /* uint64 */;
    duty: VDBRewardesTableDuty;
    group_id: number /* uint64 */;
    reward: ClElValue<string /* decimal.Decimal */>;
}
export interface VDBRewardesTableDuty {
    attestation: number /* float64 */;
    proposal: number /* float64 */;
    sync: number /* float64 */;
    slashing: number /* uint64 */;
}
export type VDBGroupRewardsResponse = ApiDataResponse<VDBGroupRewardsData>;
export interface VDBGroupRewardsData {
    attestation_source: VDBGroupRewardsDetails;
    attestation_target: VDBGroupRewardsDetails;
    attestation_head: VDBGroupRewardsDetails;
    sync: VDBGroupRewardsDetails;
    slashing: VDBGroupRewardsDetails;
    proposal: VDBGroupRewardsDetails;
    proposal_el_reward: string /* decimal.Decimal */;
}
export interface VDBGroupRewardsDetails {
    status_count: StatusCount;
    income: string /* decimal.Decimal */;
}
export type VDBRewardsChartResponse = ApiDataResponse<HighchartsSeries[]>;
/**
 * Duties Modal
 */
export type VDBEpochDutiesTableResponse = ApiPagingResponse<VDBEpochDutiesTableRow>;
export interface VDBEpochDutiesTableRow {
    validator: number /* uint64 */;
    attestation_source: VDBEpochDutiesItem;
    attestation_target: VDBEpochDutiesItem;
    attestation_head: VDBEpochDutiesItem;
    proposal: VDBEpochDutiesItem;
    sync: VDBEpochDutiesItem;
    slashing: VDBEpochDutiesItem;
}
export interface VDBEpochDutiesItem {
    status: 'success' | 'partial' | 'failed' | 'orphaned';
    reward: string /* decimal.Decimal */;
}
/**
 * ------------------------------------------------------------
 * Blocks Tab
 */
export type VDBBlocksTableResponse = ApiPagingResponse<VDBBlocksTableRow>;
export interface VDBBlocksTableRow {
    proposer: number /* uint64 */;
    group_id: number /* uint64 */;
    epoch: number /* uint64 */;
    slot: number /* uint64 */;
    block: number /* uint64 */;
    status: 'success' | 'missed' | 'orphaned' | 'scheduled';
    reward: ClElValue<string /* decimal.Decimal */>;
}
/**
 * ------------------------------------------------------------
 * Heatmap Tab
 */
export type VDBHeatmapResponse = ApiDataResponse<VDBHeatmap>;
export interface VDBHeatmap {
    epochs: number /* uint64 */[]; // X-Axis Categories
    group_ids: number /* uint64 */[]; // Y-Axis Categories
    data: VDBHeatmapCell[];
}
export interface VDBHeatmapCell {
    x: number /* uint64 */;
    y: number /* uint64 */;
    value: number /* float64 */; // Attestaton Rewards
}
export type VDBHeatmapTooltipResponse = ApiDataResponse<VDBHeatmapTooltipData>;
export interface VDBHeatmapTooltipData {
    epoch: number /* uint64 */;
    proposers: VDBHeatmapTooltipDuty[];
    syncs: VDBHeatmapTooltipDuty[];
    slashings: VDBHeatmapTooltipDuty[];
    attestation_head: StatusCount;
    attestation_source: StatusCount;
    attestation_target: StatusCount;
    attestation_income: string /* decimal.Decimal */;
}
export interface VDBHeatmapTooltipDuty {
    validator: number /* uint64 */;
    status: 'success' | 'failed' | 'orphaned';
}
/**
 * ------------------------------------------------------------
 * Deposits Tab
 */
export type VDBExecutionDepositsTableResponse = ApiPagingResponse<VDBExecutionDepositsTableRow>;
export interface VDBExecutionDepositsTableRow {
    public_key: PubKey;
    index: number /* uint64 */;
    group_id: number /* uint64 */;
    block: number /* uint64 */;
    from: Address;
    depositor: Address;
    tx_hash: Hash;
    withdrawal_credentials: Hash;
    amount: string /* decimal.Decimal */;
    valid: boolean;
}
export type VDBConsensusDepositsTableResponse = ApiPagingResponse<VDBConsensusDepositsTableRow>;
export interface VDBConsensusDepositsTableRow {
    public_key: PubKey;
    index: number /* uint64 */;
    group_id: number /* uint64 */;
    epoch: number /* uint64 */;
    slot: number /* uint64 */;
    withdrawal_credential: Hash;
    amount: string /* decimal.Decimal */;
    signature: Hash;
}
/**
 * ------------------------------------------------------------
 * Withdrawals Tab
 */
export type VDBWithdrawalsTableResponse = ApiPagingResponse<VDBWithdrawalsTableRow>;
export interface VDBWithdrawalsTableRow {
    epoch: number /* uint64 */;
    index: number /* uint64 */;
    group_id: number /* uint64 */;
    recipient: Address;
    amount: string /* decimal.Decimal */;
}
/**
 * ------------------------------------------------------------
 * Manage Modal
 */
export type VDBManageValidatorsTableResponse = ApiPagingResponse<VDBManageValidatorsTableRow>;
export interface VDBManageValidatorsTableRow {
    index: number /* uint64 */;
    public_key: PubKey;
    group_id: number /* uint64 */;
    balance: string /* decimal.Decimal */;
    status: string;
    withdrawal_credential: Hash;
}
/**
 * ------------------------------------------------------------
 * Misc. Responses
 */
export interface VDBPostData {
    id: number /* uint64 */;
    user_id: number /* uint64 */;
    name: string;
    network: number /* uint64 */;
    created_at: string /* time.Time */;
}
